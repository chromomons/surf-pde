from stokes_solvers import *
import numpy as np
from ..meshing import *
from ngsolve import SetNumThreads
import pandas as pd


SetNumThreads(16)

mode = str(sys.argv[1])
order = int(sys.argv[2])

alpha = 1.0

# EXACT QUANTITIES

if mode == 'reu_circ':
    exact = {
        "name": mode,
        "phi": sqrt(x*x + y*y + z*z) - 1,
        "u1": -z*(x**2 + 15*y*z)/sqrt(x**2 + y**2 + z**2),
        "u2": x*z*(2*y + 15*z)/sqrt(x**2 + y**2 + z**2),
        "u3": (x**3 - 2*x*y**2)/sqrt(x**2 + y**2 + z**2),
        "p": x*x*x + x*y*z,
        "f1": (-alpha*x**4*z + x**2*(y**2*(-alpha*z + 3*sqrt(x**2 + y**2 + z**2)) + y*(-15*alpha*z**2 - 2*z*sqrt(x**2 + y**2 + z**2) + 15) - z*(alpha*z**2 - 3*z*sqrt(x**2 + y**2 + z**2) + 4)) + y**3*(z*(-15*alpha*z + sqrt(x**2 + y**2 + z**2)) + 15) + y**2*z + y*z**2*(z*(-15*alpha*z + sqrt(x**2 + y**2 + z**2)) - 60) + z**3)/(x**2 + y**2 + z**2)**(3/2),
        "f2": x*(x**2*(alpha*z*(2*y + 15*z) + (-3*y + z)*sqrt(x**2 + y**2 + z**2) - 15) + 5*y*(-3*y + 2*z) + z*(alpha*(2*y + 15*z)*(y**2 + z**2) + 60*z + (-2*y**2 + z**2)*sqrt(x**2 + y**2 + z**2)))/(x**2 + y**2 + z**2)**(3/2),
        "f3": x*(alpha*x**4 + x**2*(alpha*(-y**2 + z**2) + (y - 3*z)*sqrt(x**2 + y**2 + z**2) + 4) - 11*y**2 + y*(-2*alpha*y*(y**2 + z**2) + (y**2 - 2*z**2)*sqrt(x**2 + y**2 + z**2)) - z**2)/(x**2 + y**2 + z**2)**(3/2),
        "g": 0
    }
    unif_ref = 1
    if order == 2:
        max_nref = 6
    else:
        max_nref = 5
    bbox_sz = 1.0
elif mode == 'reu_torus':
    r = 1./3
    R = 2./3
    exact = {
        "name": mode,
        "phi": (sqrt(x*x + y*y) - R)**2 + z*z - r*r,
        "u1": -z*(-15*R*y*z + sqrt(x**2 + y**2)*(x**2 + 15*y*z))/(sqrt(x**2 + y**2)*sqrt(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)),
        "u2": x*z*(-15*R*z + sqrt(x**2 + y**2)*(2*y + 15*z))/(sqrt(x**2 + y**2)*sqrt(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)),
        "u3": x*(-R + sqrt(x**2 + y**2))*(x**2 - 2*y**2)/(sqrt(x**2 + y**2)*sqrt(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)),
        "p": x*x*x + x*y*z,
        "f1": -alpha*z*(-15*R*y*z + sqrt(x**2 + y**2)*(x**2 + 15*y*z))/(sqrt(x**2 + y**2)*sqrt(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)) - (30*R**13*y*(x**2 + y**2)**(5/2) + R**12*(x**2 + y**2)*(15*y*z**2*(x**2 + y**2) - 390*y*(x**2 + y**2)**2 + z*(x**2 - 2*y**2)*(7*x**2 + y**2)) + R**11*(x**2 + y**2)**(3/2)*(-15*y*z**4 - 135*y*z**2*(x**2 + y**2) + 2340*y*(x**2 + y**2)**2 + z*(-85*x**4 + 140*x**2*y**2 + 24*y**4)) + R**10*(x**2 + y**2)*(225*y*z**4*(x**2 + y**2) + 495*y*z**2*(x**2 + y**2)**2 - 8580*y*(x**2 + y**2)**3 + z**3*(33*x**4 - 69*x**2*y**2 - 12*y**4) + z*(x**2 + y**2)*(473*x**4 - 679*x**2*y**2 - 132*y**4)) + 5*R**9*(x**2 + y**2)**(3/2)*(-15*y*z**6 - 330*y*z**4*(x**2 + y**2) - 165*y*z**2*(x**2 + y**2)**2 + 4290*y*(x**2 + y**2)**3 + z**3*(-67*x**4 + 122*x**2*y**2 + 24*y**4) + z*(x**2 + y**2)*(-319*x**4 + 390*x**2*y**2 + 88*y**4)) + 30*R**8*(x**2 + y**2)*(25*y*z**6*(x**2 + y**2) + 240*y*z**4*(x**2 + y**2)**2 - 1287*y*(x**2 + y**2)**4 - z**5*(-2*x**4 + 5*x**2*y**2 + y**4) + z**3*(x**2 + y**2)*(51*x**4 - 79*x**2*y**2 - 18*y**4) + z*(x**2 + y**2)**2*(121*x**4 - 122*x**2*y**2 - 33*y**4)) + 2*R**7*(x**2 + y**2)**(3/2)*(-75*y*z**8 - 2025*y*z**6*(x**2 + y**2) - 10125*y*z**4*(x**2 + y**2)**2 + 1485*y*z**2*(x**2 + y**2)**3 + 25740*y*(x**2 + y**2)**4 + z**5*(-245*x**4 + 520*x**2*y**2 + 120*y**4) + z**3*(30*x**2 + 30*y**2)*(-69*x**4 + 88*x**2*y**2 + 24*y**4) + 3*z*(x**2 + y**2)**2*(-979*x**4 + 776*x**2*y**2 + 264*y**4)) + 2*R**6*(x**2 + y**2)*(525*y*z**8*(x**2 + y**2) + 6825*y*z**6*(x**2 + y**2)**2 + 19215*y*z**4*(x**2 + y**2)**3 - 3465*y*z**2*(x**2 + y**2)**4 - 25740*y*(x**2 + y**2)**5 + z**7*(25*x**4 - 85*x**2*y**2 - 20*y**4) + z**5*(5*x**2 + 5*y**2)*(175*x**4 - 305*x**2*y**2 - 84*y**4) + 105*z**3*(x**2 + y**2)**2*(35*x**4 - 35*x**2*y**2 - 12*y**4) + 21*z*(x**2 + y**2)**3*(165*x**4 - 95*x**2*y**2 - 44*y**4)) + 2*R**5*(x**2 + y**2)**(3/2)*(-75*y*z**10 - 2025*y*z**8*(x**2 + y**2) - 14700*y*z**6*(x**2 + y**2)**2 - 25200*y*z**4*(x**2 + y**2)**3 + 4455*y*z**2*(x**2 + y**2)**4 + 19305*y*(x**2 + y**2)**5 + z**7*(-155*x**4 + 430*x**2*y**2 + 120*y**4) + z**5*(-17*x**2 + 28*y**2)*(7*x**2 + 2*y**2)*(15*x**2 + 15*y**2) + 21*z**3*(x**2 + y**2)**2*(-213*x**4 + 154*x**2*y**2 + 72*y**4) + 3*z*(x**2 + y**2)**3*(-1001*x**4 + 358*x**2*y**2 + 264*y**4)) + 5*R**4*(x**2 + y**2)*(135*y*z**10*(x**2 + y**2) + 1950*y*z**8*(x**2 + y**2)**2 + 8190*y*z**6*(x**2 + y**2)**3 + 9180*y*z**4*(x**2 + y**2)**4 - 1485*y*z**2*(x**2 + y**2)**5 - 4290*y*(x**2 + y**2)**6 + z**9*(3*x**4 - 21*x**2*y**2 - 6*y**4) + z**7*(8*x**2 + 8*y**2)*(20*x**4 - 43*x**2*y**2 - 15*y**4) + 10*z**5*(x**2 + y**2)**2*(91*x**4 - 89*x**2*y**2 - 42*y**4) + 168*z**3*(x**2 + y**2)**3*(9*x**4 - 4*x**2*y**2 - 3*y**4) + 3*z*(x**2 + y**2)**4*(253*x**4 - 35*x**2*y**2 - 66*y**4)) + 5*R**3*(x**2 + y**2)**(3/2)*(x**2 + y**2 + z**2)**2*(-15*y*z**8 - 309*y*z**6*(x**2 + y**2) - 2217*y*z**4*(x**2 + y**2)**2 - 2607*y*z**2*(x**2 + y**2)**3 + 1716*y*(x**2 + y**2)**4 + z**5*(-13*x**4 + 68*x**2*y**2 + 24*y**4) + z**3*(2*x**2 + 2*y**2)*(-97*x**4 + 100*x**2*y**2 + 56*y**4) + z*(x**2 + y**2)**2*(-341*x**4 - 28*x**2*y**2 + 88*y**4)) - R**2*(x**2 + y**2)*(x**2 + y**2 + z**2)**3*(-165*y*z**6*(x**2 + y**2) - 2040*y*z**4*(x**2 + y**2)**2 - 5535*y*z**2*(x**2 + y**2)**3 + 2340*y*(x**2 + y**2)**4 + z**5*(3*x**4 + 33*x**2*y**2 + 12*y**4) + z**3*(6*x**2 + 6*y**2)*(-19*x**4 + 46*x**2*y**2 + 24*y**4) + z*(x**2 + y**2)**2*(-517*x**4 - 157*x**2*y**2 + 132*y**4)) + R*(x**2 + y**2)**(3/2)*(x**2 + y**2 + z**2)**4*(-15*y*z**6 - 150*y*z**4*(x**2 + y**2) - 1245*y*z**2*(x**2 + y**2)**2 + 390*y*(x**2 + y**2)**3 + z**3*(5*x**4 + 50*x**2*y**2 + 24*y**4) + z*(x**2 + y**2)*(-95*x**4 - 50*x**2*y**2 + 24*y**4)) - 2*(x**2 + y**2)**3*(x**2 + y**2 + z**2)**5*(-60*y*z**2 + 15*y*(x**2 + y**2) + z**3 + z*(-4*x**2 + y**2)))/(2*(x**2 + y**2)**3*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)**(13/2)) - (R**2*y*sqrt(x**2 + y**2)*(x**2*(-3*y + z) - y**2*z) + R*y*(x**2 + y**2)*(x**2*(6*y - 3*z) + 2*y**2*z) - (x**2 + y**2)**(3/2)*(x**2*(3*y**2 - 2*y*z + 3*z**2) + y*z*(y**2 + z**2)))/((x**2 + y**2)**(3/2)*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)),
        "f2": -x*(-30*R**13*(x**2 + y**2)**(5/2) + 3*R**12*(x**2 + y**2)*(-6*y**3*z - z**2*(5*x**2 + 5*y**2) + 130*(x**2 + y**2)**2) - R**11*(x**2 + y**2)**(3/2)*(-y*z*(17*x**2 + 218*y**2) - 15*z**4 - z**2*(135*x**2 + 135*y**2) + 2340*(x**2 + y**2)**2) + 5*R**10*(x**2 + y**2)*(-18*y**3*z**3 - 2*y*z*(x**2 + y**2)*(19*x**2 + 121*y**2) - z**4*(45*x**2 + 45*y**2) - 99*z**2*(x**2 + y**2)**2 + 1716*(x**2 + y**2)**3) - 5*R**9*(x**2 + y**2)**(3/2)*(-y*z**3*(17*x**2 + 182*y**2) - y*z*(x**2 + y**2)*(193*x**2 + 814*y**2) - 15*z**6 - z**4*(330*x**2 + 330*y**2) - 165*z**2*(x**2 + y**2)**2 + 4290*(x**2 + y**2)**3) + 30*R**8*(x**2 + y**2)*(-6*y**3*z**5 - 2*y*z**3*(x**2 + y**2)*(13*x**2 + 69*y**2) - 14*y*z*(x**2 + y**2)**2*(7*x**2 + 22*y**2) - z**6*(25*x**2 + 25*y**2) - 240*z**4*(x**2 + y**2)**2 + 1287*(x**2 + y**2)**4) - 2*R**7*(x**2 + y**2)**(3/2)*(-5*y*z**5*(17*x**2 + 146*y**2) - 30*y*z**3*(x**2 + y**2)*(53*x**2 + 186*y**2) - 3*y*z*(x**2 + y**2)**2*(995*x**2 + 2486*y**2) - 75*z**8 - z**6*(2025*x**2 + 2025*y**2) - 10125*z**4*(x**2 + y**2)**2 + 1485*z**2*(x**2 + y**2)**3 + 25740*(x**2 + y**2)**4) + 2*R**6*(x**2 + y**2)*(-90*y**3*z**7 - 10*y*z**5*(x**2 + y**2)*(61*x**2 + 259*y**2) - 210*y*z**3*(x**2 + y**2)**2*(18*x**2 + 47*y**2) - 42*y*z*(x**2 + y**2)**3*(101*x**2 + 209*y**2) - z**8*(525*x**2 + 525*y**2) - 6825*z**6*(x**2 + y**2)**2 - 19215*z**4*(x**2 + y**2)**3 + 3465*z**2*(x**2 + y**2)**4 + 25740*(x**2 + y**2)**5) - 10*R**5*(x**2 + y**2)**(3/2)*(-y*z**7*(17*x**2 + 110*y**2) - 75*y*z**5*(x**2 + y**2)*(5*x**2 + 14*y**2) - 21*y*z**3*(x**2 + y**2)**2*(55*x**2 + 114*y**2) - 3*y*z*(x**2 + y**2)**3*(287*x**2 + 506*y**2) - 15*z**10 - z**8*(405*x**2 + 405*y**2) - 2940*z**6*(x**2 + y**2)**2 - 5040*z**4*(x**2 + y**2)**3 + 891*z**2*(x**2 + y**2)**4 + 3861*(x**2 + y**2)**5) + 5*R**4*(x**2 + y**2)*(-18*y**3*z**9 - 16*y*z**7*(x**2 + y**2)*(11*x**2 + 35*y**2) - 20*y*z**5*(x**2 + y**2)**2*(64*x**2 + 133*y**2) - 336*y*z**3*(x**2 + y**2)**3*(7*x**2 + 12*y**2) - 6*y*z*(x**2 + y**2)**4*(208*x**2 + 319*y**2) - z**10*(135*x**2 + 135*y**2) - 1950*z**8*(x**2 + y**2)**2 - 8190*z**6*(x**2 + y**2)**3 - 9180*z**4*(x**2 + y**2)**4 + 1485*z**2*(x**2 + y**2)**5 + 4290*(x**2 + y**2)**6) - 5*R**3*(x**2 + y**2)**(3/2)*(x**2 + y**2 + z**2)**2*(-y*z**5*(17*x**2 + 74*y**2) - 6*y*z**3*(x**2 + y**2)*(55*x**2 + 102*y**2) - 3*y*z*(x**2 + y**2)**2*(211*x**2 + 286*y**2) - 15*z**8 - z**6*(309*x**2 + 309*y**2) - 2217*z**4*(x**2 + y**2)**2 - 2607*z**2*(x**2 + y**2)**3 + 1716*(x**2 + y**2)**4) + R**2*(x**2 + y**2)*(x**2 + y**2 + z**2)**3*(-18*y**3*z**5 - 6*y*z**3*(x**2 + y**2)*(45*x**2 + 86*y**2) - 2*y*z*(x**2 + y**2)**2*(535*x**2 + 649*y**2) - z**6*(165*x**2 + 165*y**2) - 2040*z**4*(x**2 + y**2)**2 - 5535*z**2*(x**2 + y**2)**3 + 2340*(x**2 + y**2)**4) - R*(x**2 + y**2)**(3/2)*(x**2 + y**2 + z**2)**4*(-y*z**3*(17*x**2 + 38*y**2) - 7*y*z*(x**2 + y**2)*(31*x**2 + 34*y**2) - 15*z**6 - z**4*(150*x**2 + 150*y**2) - 1245*z**2*(x**2 + y**2)**2 + 390*(x**2 + y**2)**3) + 2*alpha*z*(x**2 + y**2)**(5/2)*(15*R*z - sqrt(x**2 + y**2)*(2*y + 15*z))*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)**6 + 2*(x**2 + y**2)**(3/2)*(R**2*sqrt(x**2 + y**2)*(x**2*(3*y - z) + y**2*z) - R*(x**2 + y**2)*(x**2*(6*y - 2*z) + 3*y**2*z) + (x**2 + y**2)**(3/2)*(x**2*(3*y - z) + 2*y**2*z - z**3))*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)**(11/2) + 10*(x**2 + y**2)**3*(x**2 + y**2 + z**2)**5*(3*x**2 + 3*y**2 - 2*y*z - 12*z**2))/(2*(x**2 + y**2)**3*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)**(13/2)),
        "f3": x*(R**15*(-7*x**2 + 20*y**2) + 2*R**14*sqrt(x**2 + y**2)*(53*x**2 - 151*y**2) + R**13*(-749*x**4 + x**2*(1379*y**2 - 40*z**2) + 2128*y**4 + 122*y**2*z**2) + 2*R**12*sqrt(x**2 + y**2)*(z**2*(263*x**2 - 799*y**2) + (x**2 + y**2)*(1638*x**2 - 4641*y**2)) + R**11*(z**4*(-93*x**2 + 312*y**2) - z**2*(x**2 + y**2)*(3192*x**2 - 9660*y**2) + (-9919*x**2 + 28028*y**2)*(x**2 + y**2)**2) + 2*R**10*sqrt(x**2 + y**2)*(z**4*(519*x**2 - 1731*y**2) + z**2*(x**2 + y**2)*(5918*x**2 - 17842*y**2) + (x**2 + y**2)**2*(11011*x**2 - 31031*y**2)) + R**9*(z**6*(-110*x**2 + 430*y**2) - z**4*(x**2 + y**2)*(5265*x**2 - 17460*y**2) - z**2*(x**2 + y**2)**2*(29920*x**2 - 89870*y**2) + (-37037*x**2 + 104104*y**2)*(x**2 + y**2)**3) + 2*R**8*sqrt(x**2 + y**2)*(z**6*(505*x**2 - 1955*y**2) + z**4*(x**2 + y**2)*(8010*x**2 - 26415*y**2) + z**2*(x**2 + y**2)**2*(27225*x**2 - 81477*y**2) + (x**2 + y**2)**3*(24024*x**2 - 67353*y**2)) + R**7*(z**8*(-65*x**2 + 340*y**2) - z**6*(x**2 + y**2)*(4120*x**2 - 15800*y**2) - z**4*(x**2 + y**2)**2*(32490*x**2 - 106560*y**2) - z**2*(x**2 + y**2)**3*(73392*x**2 - 218856*y**2) + (-48477*x**2 + 135564*y**2)*(x**2 + y**2)**4) + 2*R**6*sqrt(x**2 + y**2)*(z**8*(235*x**2 - 1205*y**2) + z**6*(x**2 + y**2)*(4900*x**2 - 18620*y**2) + z**4*(x**2 + y**2)**2*(23058*x**2 - 75222*y**2) + z**2*(x**2 + y**2)**3*(37092*x**2 - 110220*y**2) + (x**2 + y**2)**4*(19019*x**2 - 53053*y**2)) + R**5*(z**10*(-12*x**2 + 150*y**2) - z**8*(x**2 + y**2)*(1455*x**2 - 7320*y**2) - z**6*(x**2 + y**2)**2*(14980*x**2 - 56420*y**2) - z**4*(x**2 + y**2)**3*(46746*x**2 - 151704*y**2) - z**2*(x**2 + y**2)**4*(56232*x**2 - 166518*y**2) + (-23023*x**2 + 64064*y**2)*(x**2 + y**2)**5) + 2*R**4*sqrt(x**2 + y**2)*(x**2 + y**2 + z**2)**2*(z**6*(33*x**2 - 381*y**2) + z**4*(x**2 + y**2)*(1184*x**2 - 5413*y**2) + z**2*(x**2 + y**2)**2*(5229*x**2 - 17283*y**2) + (x**2 + y**2)**3*(5278*x**2 - 14651*y**2)) - R**3*(x**2 + y**2 + z**2)**3*(-z**6*(5*x**2 + 32*y**2) + z**4*(x**2 + y**2)*(159*x**2 - 1452*y**2) + z**2*(x**2 + y**2)**2*(2113*x**2 - 8048*y**2) + (x**2 + y**2)**3*(3549*x**2 - 9828*y**2)) + 2*R**2*sqrt(x**2 + y**2)*(x**2 + y**2 + z**2)**4*(-z**4*(7*x**2 + 49*y**2) + z**2*(x**2 + y**2)*(106*x**2 - 590*y**2) + (x**2 + y**2)**2*(413*x**2 - 1141*y**2)) - R*(x**2 + y**2)*(x**2 + y**2 + z**2)**5*(119*x**4 - x**2*(209*y**2 + 3*z**2) - (8*y**2 + 2*z**2)*(41*y**2 + z**2)) + 2*alpha*(-R + sqrt(x**2 + y**2))*(x**2 - 2*y**2)*(x**2 + y**2)*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)**7 + 2*(x**2 + y**2)**(3/2)*(x**2 + y**2 + z**2)**6*(4*x**2 - 11*y**2 - z**2) + (2*x**2 + 2*y**2)*(R**2*y*sqrt(x**2 + y**2) + R*(3*x**2*z + 2*y*z**2 - 2*y*(x**2 + y**2)) + sqrt(x**2 + y**2)*(x**2*(y - 3*z) + y**3 - 2*y*z**2))*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)**(13/2))/(2*(x**2 + y**2)**(3/2)*(R**2 - 2*R*sqrt(x**2 + y**2) + x**2 + y**2 + z**2)**(15/2)),
        "g": 0
    }
    unif_ref = 2
    if order in [2, 3]:
        max_nref = 5
    else:
        max_nref = 4
    bbox_sz = 1.0
elif mode == 'reu_bic':
    d = 0.96
    c = 0.95
    exact = {
        "name": mode,
        "phi": -c*c*c*c - 8*d*d*(y*y + z*z) + (d*d + x*x + y*y + z*z)**3,
        "u1": -z*(x**2 + 15*y*z)*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2)/sqrt(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5),
        "u2": x*z*(d**4*(6*y + 45*z) + 2*d**2*(6*y**3 + 45*y**2*z + y*(6*x**2 + 6*z**2 - 8) + 45*z*(x**2 + z**2)) + (6*y + 45*z)*(x**2 + y**2 + z**2)**2)/sqrt(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5),
        "u3": x*(3*d**4*(x**2 - 2*y**2) + 2*d**2*(8*y**2 + (3*x**2 - 6*y**2)*(x**2 + y**2 + z**2)) + (3*x**2 - 6*y**2)*(x**2 + y**2 + z**2)**2)/sqrt(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5),
        "p": x*x*x + x*y*z,
        "f1": (-alpha*z*(x**2 + 15*y*z)*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2)*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**2 + 243*d**20*(x**2 + y**2 + z**2)*(-60*y*z**2 + 15*y*(x**2 + y**2) + z**3 + z*(-4*x**2 + y**2)) - 162*d**18*(x**6*(-225*y + 60*z) + x**4*(-675*y**3 + 105*y**2*z + 15*y*(30*z**2 + 4) + 105*z**3 - 32*z) + 5*x**2*(9*y**3*(8 - 15*y**2) + 2*y**2*z*(3*y**2 - 5) + 315*y*z**4 + 36*y*z**2*(5*y**2 - 3) + 6*z**5 + z**3*(12*y**2 - 10)) - (5*y**2 + 5*z**2)*(45*y**5 + 3*y**4*z - 15*y**3*(9*z**2 + 4) + y**2*(6*z**3 - 4*z) + 18*y*z**2*(13 - 10*z**2) + z**3*(3*z**2 - 4))) - 27*d**16*(405*x**8*(-15*y + 4*z) + 3*x**6*(-8100*y**3 + 1485*y**2*z + 15*y*(135*z**2 + 64) + 1485*z**3 - 512*z) + x**4*(90*y**3*(224 - 405*y**2) + 54675*y*z**4 + 45*y*z**2*(405*y**2 - 512) + 3645*z**5 + z**3*(7290*y**2 - 3936) + z*(3645*y**4 - 3936*y**2 + 256)) + 5*x**2*(-4860*y**7 + 81*y**6*z + 9*y**5*(405*z**2 + 704) + 9*y**4*z*(27*z**2 - 32) + 18*y**3*(1215*z**4 - 560*z**2 - 64) + y**2*z*(243*z**4 - 576*z**2 + 256) + 27*y*z**2*(495*z**4 - 608*z**2 + 64) + z**3*(16 - 9*z**2)**2) - (5*y**2 + 5*z**2)*(1215*y**7 + 81*y**6*z - 90*y**5*(27*z**2 + 32) + 3*y**4*z*(81*z**2 - 64) + y**3*(-8505*z**4 + 8352*z**2 + 1920) + y**2*z*(243*z**4 - 384*z**2 + 128) - 12*y*z**2*(405*z**4 - 936*z**2 + 608) + z**3*(81*z**4 - 192*z**2 + 128))) - 72*d**14*(405*x**10*(-15*y + 4*z) - 9*x**8*(3375*y**3 - 675*y**2*z - 420*y - 675*z**3 + 224*z) - 18*x**6*(3375*y**5 - 450*y**4*z - 1680*y**3 + y**2*(-900*z**3 + 399*z) + 15*y*z**2*(98 - 225*z**2) - 450*z**5 + 399*z**3 - 32*z) - 6*x**4*(135*y**3*(75*y**4 - 84*y**2 + 16) + y**2*z*(-675*y**4 + 1176*y**2 - 584) - 20250*y*z**6 + 45*y*z**4*(511 - 675*y**2) + 45*y*z**2*(259*y**2 - 72) - 675*z**7 + z**5*(1176 - 2025*y**2) + z**3*(-2025*y**4 + 2352*y**2 - 584)) - 15*x**2*(2025*y**9 - 4032*y**7 + 42*y**6*z + 18*y**5*(-675*z**4 + 224*z**2 + 128) + 6*y**4*z*(21*z**2 - 16) - 8*y**3*(2025*z**6 - 2520*z**4 + 564*z**2 + 16) + 2*y**2*z*(63*z**4 - 96*z**2 + 32) + 3*y*z**2*(-2025*z**6 + 4032*z**4 - 2272*z**2 + 64) + 42*z**7 - 96*z**5 + 64*z**3) - (5*y**2 + 5*z**2)*(1215*y**9 + 81*y**8*z - 135*y**7*(9*z**2 + 28) + 36*y**6*z*(9*z**2 - 7) + 27*y**5*(-405*z**4 + 266*z**2 + 160) + 18*y**4*z*(27*z**4 - 42*z**2 + 16) - 3*y**3*(9*z**2*(495*z**4 - 952*z**2 + 448) + 640) + 4*y**2*z*(9*z**2*(9*z**4 - 21*z**2 + 16) - 32) + 6*y*z**2*(-9*z**2*(90*z**4 - 273*z**2 + 304) + 1184) + z**3*(3*z**2 - 4)*(27*z**4 - 48*z**2 + 32))) - 6*d**12*(-8505*x**12*(15*y - 4*z) + 189*x**10*(-4050*y**3 + 855*y**2*z + 15*y*(32 - 45*z**2) + 855*z**3 - 256*z) - 27*x**8*(70875*y**5 - 11025*y**4*z + 945*y**3*(25*z**2 - 32) + 14*y**2*z*(584 - 1575*z**2) + 630*y*z**2*(32 - 75*z**2) - 11025*z**5 + 8176*z**3 - 640*z) - 18*x**6*(90*y**3*(1575*y**4 - 1456*y**2 + 240) + y**2*z*(21*y**2*(904 - 675*y**2) - 6880) - 212625*y*z**6 - 3780*y*z**4*(75*y**2 - 58) + 225*y*z**2*(315*y**4 + 392*y**2 - 144) - 14175*z**7 + z**5*(18984 - 42525*y**2) + z**3*(-42525*y**4 + 37968*y**2 - 6880)) + 9*x**4*(-5*y**3*(9*y**2*(4725*y**4 - 7616*y**2 + 3520) - 2048) + 2*y**2*z*(4725*y**6 - 10248*y**4 + 8320*y**2 - 2560) + 496125*y*z**8 + 630*y*z**6*(2025*y**2 - 1352) + 300*y*z**4*(567*y**2*(5*y**2 - 8) + 1360) - 30*y*z**2*(4725*y**6 + 5544*y**4 - 8320*y**2 + 512) + 9450*z**9 + z**7*(37800*y**2 - 20496) + z**5*(252*y**2*(225*y**2 - 244) + 16640) + z**3*(37800*y**6 - 61488*y**4 + 33280*y**2 - 5120)) - 5*x**2*(y**2 + z**2)*(153090*y**9 + 1701*y**8*z - 1701*y**7*(15*z**2 + 224) + 756*y**6*z*(9*z**2 - 4) + 81*y**5*(-12285*z**4 + 5712*z**2 + 4160) + 1134*y**4*z**3*(9*z**2 - 8) - 27*y**3*(48195*z**6 - 76608*z**4 + 28640*z**2 + 4096) + 12*y**2*z*(567*z**6 - 756*z**4 + 256) + 9*y*z**2*(-15*z**2*(3591*z**4 - 9072*z**2 + 8224) + 41984) + 3*z**3*(567*z**6 - 1008*z**4 + 1024) - 2048*z) - (5*y**2 + 5*z**2)*(15*y**3*(1701*y**8 - 6048*y**6 + 8640*y**4 - 6144*y**2 + 2048) + y**2*z*(1701*y**8 - 6048*y**6 + 8640*y**4 - 6144*y**2 + 2048) - 102060*y*z**10 + 1701*y*z**8*(208 - 225*y**2) - 324*y*z**6*(1575*y**4 - 2996*y**2 + 1520) + 18*y*z**4*(-27*y**2*(525*y**4 - 1624*y**2 + 1760) + 18944) + 432*y*z**2*(3*y**2 - 4)*(63*y**4 - 96*y**2 + 64) + 1701*z**11 + z**9*(8505*y**2 - 6048) + z**7*(17010*y**4 - 24192*y**2 + 8640) + z**5*(17010*y**6 - 36288*y**4 + 25920*y**2 - 6144) + z**3*(3*y**2*(9*y**2*(315*y**4 - 896*y**2 + 960) - 4096) + 2048))) + 4*d**10*(15309*x**14*(15*y - 4*z) + 567*x**12*(2835*y**3 - 621*y**2*z + 30*y*(27*z**2 - 10) - 621*z**3 + 160*z) + 27*x**10*(178605*y**5 - 30618*y**4*z + 1260*y**3*(81*z**2 - 50) + 21*y**2*(-2916*z**3 + 890*z) + 315*y*z**2*(100 - 243*z**2) - 30618*z**5 + 18690*z**3 - 1280*z) + 405*x**8*(19845*y**7 - 2457*y**6*z + 210*y**5*(81*z**2 - 70) + 21*y**4*z*(124 - 351*z**2) + 15*y**3*(-1701*z**4 + 406*z**2 + 128) + y**2*z*(-7371*z**4 + 5208*z**2 - 704) - 90*y*z**2*(252*z**4 - 231*z**2 + 32) - 2457*z**7 + 2604*z**5 - 704*z**3) + 135*x**6*(59535*y**9 - 4536*y**8*z + 7560*y**7*(9*z**2 - 10) + 252*y**6*z*(29 - 72*z**2) - 210*y**5*(729*z**4 - 48*z**2 - 128) - 4*y**4*z*(6804*z**4 - 5481*z**2 + 1024) - 48*y**3*(5670*z**6 - 5145*z**4 + 760*z**2 + 32) + 4*y**2*z*(-4536*z**6 + 5481*z**4 - 2048*z**2 + 192) - 9*y*z**2*(12285*z**6 - 17920*z**4 + 7040*z**2 - 256) - 4536*z**9 + 7308*z**7 - 4096*z**5 + 768*z**3) + 3*x**4*(y**2 + z**2)*(1607445*y**9 - 45927*y**8*z + 2835*y**7*(243*z**2 - 1100) + 756*y**6*z*(140 - 243*z**2) + 405*y**5*(-18711*z**4 + 5880*z**2 + 5120) - 126*y**4*z*(2187*z**4 - 2520*z**2 + 800) - 135*y**3*(79947*z**6 - 104580*z**4 + 30400*z**2 + 3584) + 36*y**2*z*(-5103*z**6 + 8820*z**4 - 5600*z**2 + 1280) - 270*y*z**2*(15309*z**6 - 31920*z**4 + 22880*z**2 - 5760) - 45927*z**9 + 105840*z**7 - 100800*z**5 + 46080*z**3 - 8192*z) + x**2*(y**2 + z**2)*(1607445*y**11 + 30618*y**10*z + 42525*y**9*(27*z**2 - 104) + 17010*y**8*z*(9*z**2 - 5) - 36450*y**7*(315*z**4 - 42*z**2 - 128) + 540*y**6*z*(567*z**4 - 630*z**2 + 160) - 810*y**5*(31185*z**6 - 38430*z**4 + 8320*z**2 + 2816) + 540*y**4*z*(567*z**6 - 945*z**4 + 480*z**2 - 64) + 45*y**3*(-9*z**2*(48195*z**6 - 98700*z**4 + 67840*z**2 - 14592) + 10240) + 270*y**2*z**3*(9*z**2 - 8)*(63*z**4 - 84*z**2 + 32) - 45*y*z**2*(9*z**2*(13041*z**6 - 36540*z**4 + 39680*z**2 - 20224) + 38912) + 54*z**5*(567*z**6 - 1575*z**4 + 1600*z**2 - 640) + 4096*z) + 15*y**5*(3*y**2 - 4)*(5103*y**8 - 12096*y**6 + 12672*y**4 - 6144*y**2 + 2048) + y**4*z*(3*y**2 - 4)*(5103*y**8 - 12096*y**6 + 12672*y**4 - 6144*y**2 + 2048) + 30*y**3*z**2*(3*y**2*(9*y**2*(567*y**6 - 1155*y**4 + 320*y**2 + 896) - 8192) + 10240) + y**2*z**3*(9*y**2*(11907*y**8 - 37800*y**6 + 48000*y**4 - 30720*y**2 + 10240) - 16384) - 918540*y*z**14 - 25515*y*z**12*(207*y**2 - 130) - 810*y*z**10*(21*y**2*(729*y**2 - 925) + 6080) - 405*y*z**8*(36855*y**6 - 71400*y**4 + 45440*y**2 - 9472) - 1620*y*z**6*(5670*y**8 - 15225*y**6 + 15040*y**4 - 6464*y**2 + 1024) - 15*y*z**4*(3*y**2*(9*y**2*(5103*y**6 - 19950*y**4 + 29440*y**2 - 20736) + 63488) - 28672) + 15309*z**15 + z**13*(107163*y**2 - 56700) + z**11*(189*y**2 - 80)*(1701*y**2 - 1080) + z**9*(945*y**2 - 540)*(567*y**4 - 576*y**2 + 128) + z**7*(135*y**2*(3969*y**6 - 8400*y**4 + 6400*y**2 - 2048) + 30720) + z**5*(9*y**2*(35721*y**8 - 94500*y**6 + 96000*y**4 - 46080*y**2 + 10240) - 8192)) + 6*d**8*(x**2 + y**2 + z**2)*(8505*x**14*(15*y - 4*z) + 189*x**12*(4725*y**3 - 1035*y**2*z + 15*y*(90*z**2 - 32) - 1035*z**3 + 256*z) + 27*x**10*(99225*y**5 - 17010*y**4*z + 2100*y**3*(27*z**2 - 16) + 28*y**2*z*(356 - 1215*z**2) + 525*y*z**2*(32 - 81*z**2) - 17010*z**5 + 9968*z**3 - 640*z) + 9*x**8*(496125*y**7 - 61425*y**6*z + 3150*y**5*(135*z**2 - 112) + 63*y**4*z*(992 - 2925*z**2) + 45*y**3*(-14175*z**4 + 3248*z**2 + 960) + y**2*z*(63*z**2*(1984 - 2925*z**2) - 16000) - 3240*y*z**2*(175*z**4 - 154*z**2 + 20) - 61425*z**7 + 62496*z**5 - 16000*z**3) + 9*x**6*(496125*y**9 - 37800*y**8*z + 37800*y**7*(15*z**2 - 16) - 2016*y**6*z*(75*z**2 - 29) - 630*y**5*(2025*z**4 - 128*z**2 - 320) - 16*y**4*z*(189*z**2*(75*z**2 - 58) + 1940) - 160*y**3*(3*z**2*(4725*z**4 - 4116*z**2 + 575) + 64) - 32*y**2*z*(4725*z**6 - 5481*z**4 + 1940*z**2 - 160) - 15*y*z**2*(61425*z**6 - 86016*z**4 + 31840*z**2 - 1024) - 8*z**3*(4725*z**6 - 7308*z**4 + 3880*z**2 - 640)) + 3*x**4*(y**2 + z**2)*(893025*y**9 - 25515*y**8*z + 4725*y**7*(81*z**2 - 352) + 252*y**6*z*(224 - 405*z**2) - 405*y**5*(10395*z**4 - 3136*z**2 - 2560) - 6*y**4*z*(63*z**2*(405*z**2 - 448) + 8480) - 105*y**3*(57105*z**6 - 71712*z**4 + 19680*z**2 + 2048) - 4*y**2*z*(25515*z**6 - 42336*z**4 + 25440*z**2 - 5120) - 30*y*z**2*(76545*z**6 - 153216*z**4 + 103440*z**2 - 23552) - 25515*z**9 + 56448*z**7 - 50880*z**5 + 20480*z**3 - 2048*z) + 15*x**2*(y**2 + z**2)*(59535*y**11 + 1134*y**10*z + 189*y**9*(225*z**2 - 832) + 378*y**8*z*(15*z**2 - 8) - 486*y**7*(875*z**4 - 112*z**2 - 320) + 36*y**6*z*(315*z**4 - 336*z**2 + 80) - 6*y**5*(189*z**4*(825*z**2 - 976) + 37680*z**2 + 11264) + 4*y**4*z*(27*z**2*(21*z**2*(5*z**2 - 8) + 80) - 256) + y**3*(-722925*z**8 + 1421280*z**6 - 918720*z**4 + 178176*z**2 + 10240) + 2*y**2*z**3*(2835*z**6 - 6048*z**4 + 4320*z**2 - 1024) + y*z**2*(-9*z**4*(63*z**2*(345*z**2 - 928) + 59680) + 245760*z**2 - 40960) + 2*z**5*(9*z**2*(63*z**4 - 168*z**2 + 160) - 512)) + 5*(y**2 + z**2)**2*(15*y**3*(1701*y**8 - 6048*y**6 + 8640*y**4 - 6144*y**2 + 2048) + y**2*z*(1701*y**8 - 6048*y**6 + 8640*y**4 - 6144*y**2 + 2048) - 102060*y*z**10 + 1701*y*z**8*(208 - 225*y**2) - 324*y*z**6*(1575*y**4 - 2996*y**2 + 1520) + 18*y*z**4*(-27*y**2*(525*y**4 - 1624*y**2 + 1760) + 18944) + 432*y*z**2*(3*y**2 - 4)*(63*y**4 - 96*y**2 + 64) + 1701*z**11 + z**9*(8505*y**2 - 6048) + z**7*(17010*y**4 - 24192*y**2 + 8640) + z**5*(17010*y**6 - 36288*y**4 + 25920*y**2 - 6144) + z**3*(3*y**2*(9*y**2*(315*y**4 - 896*y**2 + 960) - 4096) + 2048))) + 72*d**6*(x**2 + y**2 + z**2)**3*(405*x**12*(15*y - 4*z) + 9*x**10*(4050*y**3 - 855*y**2*z + 15*y*(45*z**2 - 28) - 855*z**3 + 224*z) + 9*x**8*(135*y**3*(75*y**2 - 28) - 6750*y*z**4 + 45*y*z**2*(75*y**2 + 56) - 1575*z**5 + z**3*(1022 - 3150*y**2) + z*(-1575*y**4 + 1022*y**2 - 64)) + 6*x**6*(90*y**3*(225*y**4 - 182*y**2 + 24) + y**2*z*(-2025*y**4 + 2373*y**2 - 712) - 30375*y*z**6 + 135*y*z**4*(203 - 300*y**2) + 45*y*z**2*(225*y**4 + 245*y**2 - 72) - 2025*z**7 + z**5*(2373 - 6075*y**2) + z**3*(-6075*y**4 + 4746*y**2 - 712)) + 3*x**4*(5*y**3*(9*y**2*(675*y**4 - 952*y**2 + 352) - 128) + 2*y**2*z*(-675*y**6 + 1281*y**4 - 856*y**2 + 160) - 70875*y*z**8 + 90*y*z**6*(1183 - 2025*y**2) - 60*y*z**4*(405*y**2*(5*y**2 - 7) + 692) + 30*y*z**2*(675*y**6 + 693*y**4 - 856*y**2 + 32) - 1350*z**9 + z**7*(2562 - 5400*y**2) - z**5*(8100*y**4 - 7686*y**2 + 1712) + z**3*(-5400*y**6 + 7686*y**4 - 3424*y**2 + 320)) + 5*x**2*(y**2 + z**2)*(7290*y**9 + 81*y**8*z - 81*y**7*(15*z**2 + 196) + 18*y**6*z*(18*z**2 - 7) + 27*y**5*(-1755*z**4 + 714*z**2 + 416) + 54*y**4*z**3*(9*z**2 - 7) - 9*y**3*(6885*z**6 - 9576*z**4 + 2912*z**2 + 256) + y**2*(324*z**7 - 378*z**5 + 64*z) - 45*y*z**4*(513*z**4 - 1134*z**2 + 832) + 8448*y*z**2 + z**3*(81*z**6 - 126*z**4 + 64)) + 5*(y**2 + z**2)**2*(1215*y**9 + 81*y**8*z - 135*y**7*(9*z**2 + 28) + 36*y**6*z*(9*z**2 - 7) + 27*y**5*(-405*z**4 + 266*z**2 + 160) + 18*y**4*z*(27*z**4 - 42*z**2 + 16) - 3*y**3*(9*z**2*(495*z**4 - 952*z**2 + 448) + 640) + 4*y**2*z*(9*z**2*(9*z**4 - 21*z**2 + 16) - 32) + 6*y*z**2*(-9*z**2*(90*z**4 - 273*z**2 + 304) + 1184) + z**3*(3*z**2 - 4)*(27*z**4 - 48*z**2 + 32))) + 27*d**4*(x**2 + y**2 + z**2)**5*(405*x**10*(15*y - 4*z) + 3*x**8*(10125*y**3 - 2025*y**2*z - 960*y - 2025*z**3 + 512*z) + 2*x**6*(30375*y**5 - 4050*y**4*z - 11520*y**3 + 36*y**2*z*(76 - 225*z**2) + 45*y*z**2*(224 - 675*z**2) - 4050*z**5 + 2736*z**3 - 128*z) + 2*x**4*(30375*y**7 - 2025*y**6*z - 25920*y**5 + 3*y**4*z*(896 - 2025*z**2) + 45*y**3*(-2025*z**4 + 592*z**2 + 64) + y**2*z*(-6075*z**4 + 5376*z**2 - 832) - 90*y*z**2*(675*z**4 - 584*z**2 + 48) - 2025*z**7 + 2688*z**5 - 832*z**3) + 5*x**2*(y**2 + z**2)*(6075*y**7 - 9*y**5*(675*z**2 + 1024) + 96*y**4*z + y**3*(-30375*z**4 + 18432*z**2 + 3072) + 64*y**2*z*(3*z**2 - 2) - 3*y*z**2*(6075*z**4 - 9216*z**2 + 3136) + 32*z**3*(3*z**2 - 4)) + 5*(y**2 + z**2)**2*(1215*y**7 + 81*y**6*z - 90*y**5*(27*z**2 + 32) + 3*y**4*z*(81*z**2 - 64) + y**3*(-8505*z**4 + 8352*z**2 + 1920) + y**2*z*(243*z**4 - 384*z**2 + 128) - 12*y*z**2*(405*z**4 - 936*z**2 + 608) + z**3*(81*z**4 - 192*z**2 + 128))) + 162*d**2*(x**2 + y**2 + z**2)**8*(15*x**6*(15*y - 4*z) + x**4*(675*y**3 - 105*y**2*z - 30*y*(15*z**2 + 2) - 105*z**3 + 32*z) + 5*x**2*(135*y**5 - 6*y**4*z - 36*y**3*(5*z**2 + 2) + 2*y**2*z*(5 - 6*z**2) + 9*y*z**2*(12 - 35*z**2) - 6*z**5 + 10*z**3) + (5*y**2 + 5*z**2)*(45*y**5 + 3*y**4*z - 15*y**3*(9*z**2 + 4) + y**2*(6*z**3 - 4*z) + 18*y*z**2*(13 - 10*z**2) + z**3*(3*z**2 - 4))) - (6*x**2*y*z*(d**2 + x**2 + y**2 + z**2)**2 - (3*x**2 + y*z)*(y**2 + z**2)*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2))*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2)*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**(3/2) + 243*(x**2 + y**2 + z**2)**11*(-60*y*z**2 + 15*y*(x**2 + y**2) + z**3 + z*(-4*x**2 + y**2)))/(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**(5/2),
        "f2": x*(alpha*z*(d**4*(6*y + 45*z) + 2*d**2*(6*y**3 + 45*y**2*z + y*(6*x**2 + 6*z**2 - 8) + 45*z*(x**2 + z**2)) + (6*y + 45*z)*(x**2 + y**2 + z**2)**2)*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**3 + 1152*d**8*x**8*z*(y**2 + z**2)*(81*d**8*(y**3 + y*z**2 + 5*z**3) - 288*d**6*(4*y**3 + 4*y*z**2 + 15*z**3) + 64*d**4*(105*y**3 + y*(105*z**2 + 64) + 270*z**3) + 384*d**2*(29*y**5 + 58*y**3*z**2 + 29*y*z**4 + 105*z**5 + z**3*(105*y**2 + 80)) + 2304*(y**2 + z**2)**2*(y**3 + y*z**2 + 5*z**3)) + 1536*d**8*x**6*z*(y**2 + z**2)*(243*d**10*(y**3 + y*z**2 + 5*z**3) + 27*d**8*(y**3*(9*y**2 - 128) + 9*y*z**4 + 2*y*z**2*(9*y**2 - 64) + 45*z**5 + z**3*(45*y**2 - 480)) - 36*d**6*(87*y*z**4 + 2*y*z**2*(87*y**2 - 280) + y*(87*y**4 - 560*y**2 - 256) + 315*z**5 + z**3*(315*y**2 - 1440)) + 16*d**4*(3033*y*z**4 + 6*y*z**2*(1011*y**2 + 224) + y*(3033*y**4 + 1344*y**2 - 64) + 9585*z**5 + z**3*(9585*y**2 + 2880)) + 2304*d**2*(y**2 + z**2)*(y**3*(16*y**2 + 5) + 16*y*z**4 + y*z**2*(32*y**2 + 5) + 60*z**5 + z**3*(60*y**2 + 40)) + 6912*(y**2 + z**2)**3*(y**3 + y*z**2 + 5*z**3)) + 768*d**8*x**4*z*(y**2 + z**2)*(729*d**12*(y**3 + y*z**2 + 5*z**3) + 162*d**10*(y**3*(9*y**2 - 64) + 9*y*z**4 + 2*y*z**2*(9*y**2 - 32) + 45*z**5 + z**3*(45*y**2 - 240)) + 9*d**8*(81*y*z**6 + 9*y*z**4*(27*y**2 - 224) + 3*y*z**2*(81*y**4 - 1344*y**2 + 2240) + y*(81*y**6 - 2016*y**4 + 6720*y**2 + 2048) + 405*z**7 + z**5*(810*y**2 - 7200) + z**3*(405*y**4 - 7200*y**2 + 17280)) - 8*d**6*(1053*y**7 + 9*y**5*(351*z**2 - 2512) + 3645*y**4*z**3 + y**3*(3159*z**4 - 45216*z**2 - 7680) + 810*y**2*z**3*(9*z**2 - 80) + y*(1053*z**6 - 22608*z**4 - 7680*z**2 + 512) + 405*z**5*(9*z**2 - 160)) + 32*d**4*(y**3*(7101*y**4 + 1728*y**2 - 640) + 7101*y*z**6 + 27*y*z**4*(789*y**2 + 64) + y*z**2*(21303*y**4 + 3456*y**2 - 640) + 23355*z**7 + z**5*(46710*y**2 + 2880) + z**3*(23355*y**4 + 2880*y**2 + 960)) + 384*d**2*(y**2 + z**2)**2*(y**3*(315*y**2 + 76) + 315*y*z**4 + 2*y*z**2*(315*y**2 + 38) + 1215*z**5 + z**3*(1215*y**2 + 360)) + 20736*(y**2 + z**2)**4*(y**3 + y*z**2 + 5*z**3)) + 1536*d**8*x**2*z*(y**2 + z**2)*(243*d**14*(y**3 + y*z**2 + 5*z**3) + 27*d**12*(y**3*(27*y**2 - 128) + 27*y*z**4 + 2*y*z**2*(27*y**2 - 64) + 135*z**5 + z**3*(135*y**2 - 480)) + 3*d**10*(243*y*z**6 + 729*y*z**4*(y**2 - 4) + 3*y*z**2*(243*y**2*(y**2 - 8) + 2240) + y*(3*y**2*(9*y**2 - 80)*(9*y**2 - 28) + 1024) + 1215*z**7 + z**5*(2430*y**2 - 10260) + z**3*(1215*y**4 - 10260*y**2 + 17280)) + d**8*(243*y**9 - 7776*y**7 + 68256*y**5 - 3072*y**3 + 243*y*z**8 + 972*y*z**6*(y**2 - 8) + 54*y*z**4*(y**2*(y + 4)*(27*y - 108) + 1264) + 12*y*z**2*(9*y**2*(9*y**2*(y**2 - 24) + 1264) - 256) - 1024*y + 1215*z**9 + z**7*(3645*y**2 - 25920) + z**5*(3645*y**4 - 51840*y**2 + 177120) + z**3*(1215*y**6 - 25920*y**4 + 177120*y**2 - 46080)) - 12*d**6*(y**3*(207*y**6 - 9456*y**4 + 2624*y**2 + 1536) + 207*y*z**8 + 12*y*z**6*(69*y**2 - 788) + 2*y*z**4*(621*y**4 - 14184*y**2 + 1312) + 4*y*z**2*(207*y**6 - 7092*y**4 + 1312*y**2 + 384) + 675*z**9 + z**7*(2025*y**2 - 27360) + z**5*(2025*y**4 - 54720*y**2 + 13440) + z**3*(675*y**6 - 27360*y**4 + 13440*y**2 - 2560)) + 16*d**4*(y**2 + z**2)*(y**3*(6363*y**4 - 2016*y**2 - 1280) + 6363*y*z**6 + 63*y*z**4*(303*y**2 - 32) + y*z**2*(63*y**2*(303*y**2 - 64) - 1280) + 21195*z**7 + z**5*(42390*y**2 - 10080) + z**3*(21195*y**4 - 10080*y**2 - 3840)) + 768*d**2*(y**2 + z**2)**3*(y**3*(57*y**2 - 7) + 57*y*z**4 + y*z**2*(114*y**2 - 7) + 225*z**5 + z**3*(225*y**2 - 60)) + 6912*(y**2 + z**2)**5*(y**3 + y*z**2 + 5*z**3)) + 128*d**8*z*(y**2 + z**2)*(3*d**4 + d**2*(6*y**2 + 6*z**2 - 8) + 3*(y**2 + z**2)**2)**2*(81*d**8*(y**3 + y*z**2 + 5*z**3) - 720*d**6*(y**3 + y*z**2 + 3*z**3) + 576*d**4*(4*y**3 + 4*y*z**2 + 5*z**3) + 128*d**2*(y**2 + z**2)*(51*y**3 + y*(51*z**2 + 8) + 135*z**3) + 2304*(y**2 + z**2)**2*(y**3 + y*z**2 + 5*z**3)) - 4*d**6*z*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)*(-81*d**12*(32*y**3 + 15*y**2*z + 32*y*z**2 + 165*z**3) - 324*d**10*(32*y**5 + 15*y**4*z + 4*y**3*(8*x**2 + 16*z**2 - 23) + 15*y**2*z*(x**2 + 12*z**2 - 2) + 4*y*z**2*(8*x**2 + 8*z**2 - 23) + 165*z**3*(x**2 + z**2 - 2)) + 18*d**8*(-45*y**2*z*(9*x**4 + 6*x**2*(3*y**2 - 8) + 9*y**4 - 32*y**2 + 32) - 864*y*z**6 - 48*y*z**4*(36*x**2 + 54*y**2 - 97) - 32*y*z**2*(27*x**4 + 9*x**2*(12*y**2 - 23) + 81*y**4 - 291*y**2 + 208) + 16*y*(-54*x**4*y**2 + 6*x**2*(-18*y**4 + 69*y**2 + 8) - 54*y**6 + 291*y**4 - 416*y**2) - 4455*z**7 - z**5*(8910*x**2 + 9315*y**2 - 13680) - z**3*(4455*x**4 + 1080*x**2*(9*y**2 - 22) + 5265*y**4 - 15120*y**2 + 15840)) + 12*d**6*(-15*y**2*z*(27*x**6 + 81*x**4*(y**2 - 4) + x**2*(81*y**4 - 468*y**2 + 384) + 3*y**2*(8 - 3*y**2)**2 - 128) - 864*y*z**8 - 72*y*z**6*(36*x**2 + 48*y**2 - 121) - 24*y*z**4*(108*x**4 - 984*x**2 + 216*y**4 + y**2*(324*x**2 - 1089) + 640) - 8*y*z**2*(108*x**6 + 81*x**4*(8*y**2 - 23) + 12*x**2*(81*y**4 - 492*y**2 + 188) + 432*y**6 - 3267*y**4 + 3840*y**2 - 2144) + 8*y*(-108*x**6*y**2 + 27*x**4*(-12*y**4 + 69*y**2 + 16) - 12*x**2*(27*y**6 - 246*y**4 + 188*y**2 + 8) - 108*y**8 + 1089*y**6 - 1920*y**4 + 2144*y**2) - 4455*z**9 - z**7*(13365*x**2 + 13770*y**2 - 21600) - z**5*(13365*x**4 + 135*x**2*(207*y**2 - 556) + 14580*y**4 - 45360*y**2 + 25920) - z**3*(4455*x**6 - 53460*x**4 + 63360*x**2 + 5670*y**6 + 15*y**4*(1053*x**2 - 1728) + 15*y**2*(972*x**4 - 5472*x**2 + 1920) - 21120)) + d**4*(-81*x**8*(32*y**3 + 15*y**2*z + 32*y*z**2 + 165*z**3) - 324*x**6*(32*y**5 + 15*y**4*z + 16*y**3*(4*z**2 - 23) + 60*y**2*z*(3*z**2 - 2) + 16*y*(2*z**4 - 23*z**2 - 8) + 165*z**3*(z**2 - 8)) - 18*x**4*(864*y**7 + 405*y**6*z + 96*y**5*(27*z**2 - 178) + 45*y**4*z*(117*z**2 - 112) + 96*y**3*(27*z**4 - 356*z**2 + 24) + 45*y**2*z*(207*z**4 - 1376*z**2 + 64) + 32*y*(27*z**6 - 534*z**4 + 72*z**2 + 32) + 45*z**3*(99*z**4 - 1264*z**2 + 704)) + 12*x**2*(16*y**3*(-9*y**2*(6*y**4 - 149*y**2 + 196) + 224) + 15*y**2*z*(-9*y**2*(3*y**4 - 40*y**2 + 64) + 256) - 864*y*z**8 + 144*y*z**6*(149 - 24*y**2) - 144*y*z**4*(36*y**4 - 447*y**2 + 196) + 16*y*z**2*(-9*y**2*(24*y**4 - 447*y**2 + 392) + 224) - 4455*z**9 + z**7*(63720 - 13770*y**2) - z**5*(14580*y**4 - 132840*y**2 + 118080) - z**3*(5670*y**6 - 74520*y**4 + 126720*y**2 - 42240)) - (y**2 + z**2)*(135*y**4*z*(9*y**4 - 96*y**2 + 128) + 2592*y*z**8 + 3456*y*z**6*(3*y**2 - 20) + 576*y*z**4*(27*y**4 - 360*y**2 + 244) + 384*y*z**2*(27*y**6 - 540*y**4 + 732*y**2 - 784) + 32*y*(81*y**8 - 2160*y**6 + 4392*y**4 - 9408*y**2 + 512) + 13365*z**9 + z**7*(41310*y**2 - 168480) + z**5*(43740*y**2*(y**2 - 8) + 259200) + z**3*(17010*y**6 - 194400*y**4 + 276480*y**2 - 645120))) + 24*d**2*(9*x**8*(138*y**3 + 45*y**2*z + 2*y*(69*z**2 + 32) + 495*z**3) + 6*x**6*(786*y**5 + 225*y**4*z + 4*y**3*(393*z**2 + 152) + 2970*y**2*z**3 + y*(786*z**4 + 608*z**2 - 64) + 2745*z**5) + 4*x**4*(1674*y**7 + 405*y**6*z + 54*y**5*(93*z**2 - 16) + 720*y**4*z*(9*z**2 - 1) + 2*y**3*(2511*z**4 - 864*z**2 - 400) + 15*y**2*z*(783*z**4 - 720*z**2 + 16) + 2*y*z**2*(837*z**4 - 432*z**2 - 400) + 30*z**3*(189*z**4 - 336*z**2 + 88)) + 6*x**2*(y**2 + z**2)*(2*y**3*(351*y**4 - 688*y**2 + 256) + 15*y**2*z*(9*y**4 - 32*y**2 + 32) + 702*y*z**6 + 2*y*z**4*(1053*y**2 - 688) + 2*y*z**2*(1053*y**4 - 1376*y**2 + 256) + 2295*z**7 + z**5*(4725*y**2 - 7200) + z**3*(2565*y**4 - 7680*y**2 + 4640)) + 3*(y**2 + z**2)**2*(45*y**6*z + 6*y**3*(55*y**4 - 96*y**2 + 256) + 330*y*z**6 + 18*y*z**4*(55*y**2 - 32) + 6*y*z**2*(165*y**4 - 192*y**2 + 256) + 1035*z**7 + z**5*(2115*y**2 - 960) + z**3*(1125*y**4 - 960*y**2 + 5120))) + 288*(x**2 + y**2 + z**2)**2*(x**4*(9*y**5 + 2*y**3*(9*z**2 + 56) + 15*y**2*z*(3*z**2 + 2) + y*z**2*(9*z**2 + 112) + 15*z**3*(3*z**2 + 22)) + 6*x**2*(y**2 + z**2)*(3*y**5 + y**3*(6*z**2 - 28) + 15*y**2*z*(z**2 - 1) + y*z**2*(3*z**2 - 28) + 15*z**3*(z**2 - 11)) + 3*(y**2 + z**2)**3*(3*y**3 + y*(3*z**2 - 8) + 15*z**3))) - z*(9*d**9*(x**2 + y**2 + z**2) + 12*d**7*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**5*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**3*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*d*(x**2 + y**2 + z**2)**5)**2*(-135*d**10*(2*y + 15*z) - 108*d**8*(10*y**3 + 75*y**2*z + 2*y*(5*x**2 + 5*z**2 - 11) + 25*z*(3*x**2 + 3*z**2 - 4)) - 18*d**6*(90*y**5 + 675*y**4*z + 4*y**3*(45*x**2 + 45*z**2 - 28) + 270*y**2*z*(5*x**2 + 5*z**2 - 4) + 2*y*(45*x**4 + 6*x**2*(15*z**2 - 44) + 45*z**4 - 56*z**2 + 208) + 675*z**5 + z**3*(1350*x**2 + 120) + z*(675*x**4 - 2400*x**2 + 800)) + 4*d**4*(-270*y*z**6 - 18*y*z**4*(45*x**2 + 45*y**2 - 2) - 6*y*z**2*(135*x**4 + 30*x**2*(9*y**2 - 20) + 135*y**4 - 12*y**2 + 16) + 2*y*(-135*x**6 - 81*x**4*(5*y**2 - 22) - 9*x**2*(45*y**4 - 200*y**2 + 112) - 9*y**4*(15*y**2 - 2) - 48*y**2 + 448) - 2025*z**7 - z**5*(6075*x**2 + 6075*y**2 + 6210) - z**3*(6075*x**4 + 270*x**2*(45*y**2 - 37) + 6075*y**4 + 4320*y**2 - 7920) - z*(225*x**2*(9*x**2*(x**2 - 8) + 32) + 2025*y**6 + 45*y**4*(135*x**2 - 42) + 45*y**2*(135*x**4 - 402*x**2 - 16))) + 3*d**2*(-45*x**8*(2*y + 15*z) - 36*x**6*(10*y**3 + 75*y**2*z + 10*y*z**2 - 88*y + 75*z**3 - 400*z) - 6*x**4*(90*y**5 + 675*y**4*z + 36*y**3*(5*z**2 - 28) + 90*y**2*z*(15*z**2 - 52) + 2*y*(45*z**4 - 504*z**2 + 16) + 5*z*(135*z**4 - 696*z**2 + 160)) - 12*x**2*(30*y**7 + 225*y**6*z + 18*y**5*(5*z**2 - 12) + 135*y**4*z*(5*z**2 - 8) + 6*y**3*(15*z**4 - 72*z**2 + 40) + 5*y**2*z*(135*z**4 - 192*z**2 + 88) + 6*y*z**2*(5*z**4 - 36*z**2 + 40) + 15*z**3*(15*z**4 + 8*z**2 + 56)) - (y**2 + z**2)*(90*y**7 + 675*y**6*z + 18*y**5*(15*z**2 + 16) + 45*y**4*z*(45*z**2 + 16) + 2*y**3*(135*z**4 + 288*z**2 - 64) + 15*y**2*z*(135*z**4 + 576*z**2 - 32) + 2*y*z**2*(45*z**4 + 144*z**2 - 64) + 15*z**3*(45*z**4 + 528*z**2 - 608))) + 108*(x**2 + y**2 + z**2)**3*(2*x**2*(11*y + 50*z) - 2*y**3 - 5*y**2*z - 2*y*z**2 - 55*z**3)) - (45*d**4 + 15*d**2*(6*x**2 + 6*y**2 - 4*y*z - 24*z**2) + 15*(x**2 + y**2 + z**2)*(3*x**2 + 3*y**2 - 2*y*z - 12*z**2))*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**3 + (-y**2*z*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2)**2 - 3*y*(3*x**2 + y*z)*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2)*(d**2 + x**2 + y**2 + z**2)**2 + z*(9*d**8*(x**2 + z**2) + 12*d**6*(-4*z**2 + (3*x**2 + 3*z**2)*(x**2 + y**2 + z**2)) + 2*d**4*(32*z**2 + (-16*z**2 + (9*x**2 + 9*z**2)*(x**2 + y**2 + z**2))*(3*x**2 + 3*y**2 + 3*z**2)) + 12*d**2*(-4*z**2 + (3*x**2 + 3*z**2)*(x**2 + y**2 + z**2))*(x**2 + y**2 + z**2)**2 + (9*x**2 + 9*z**2)*(x**2 + y**2 + z**2)**4))*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**(5/2))/(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**(7/2),
        "f3": x*(alpha*(3*d**4*(x**2 - 2*y**2) + 2*d**2*(8*y**2 + (3*x**2 - 6*y**2)*(x**2 + y**2 + z**2)) + (3*x**2 - 6*y**2)*(x**2 + y**2 + z**2)**2)/sqrt(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5) + (-y*z**2*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2)**2 + y*(9*d**8*(x**2 + y**2) + 12*d**6*(-4*y**2 + (3*x**2 + 3*y**2)*(x**2 + y**2 + z**2)) + 2*d**4*(32*y**2 + (-16*y**2 + (9*x**2 + 9*y**2)*(x**2 + y**2 + z**2))*(3*x**2 + 3*y**2 + 3*z**2)) + 12*d**2*(-4*y**2 + (3*x**2 + 3*y**2)*(x**2 + y**2 + z**2))*(x**2 + y**2 + z**2)**2 + (9*x**2 + 9*y**2)*(x**2 + y**2 + z**2)**4) - 3*z*(3*x**2 + y*z)*(3*d**4 + d**2*(6*x**2 + 6*y**2 + 6*z**2 - 8) + 3*(x**2 + y**2 + z**2)**2)*(d**2 + x**2 + y**2 + z**2)**2)/(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5) - (1152*d**8*x**8*y*(y**2 + z**2)*(81*d**8*(y**3 + y*z**2 + 5*z**3) - 288*d**6*(4*y**3 + 4*y*z**2 + 15*z**3) + 64*d**4*(105*y**3 + y*(105*z**2 + 64) + 270*z**3) + 384*d**2*(29*y**5 + 58*y**3*z**2 + 29*y*z**4 + 105*z**5 + z**3*(105*y**2 + 80)) + 2304*(y**2 + z**2)**2*(y**3 + y*z**2 + 5*z**3)) + 1536*d**8*x**6*y*(y**2 + z**2)*(243*d**10*(y**3 + y*z**2 + 5*z**3) + 27*d**8*(y**3*(9*y**2 - 128) + 9*y*z**4 + 2*y*z**2*(9*y**2 - 64) + 45*z**5 + z**3*(45*y**2 - 480)) - 36*d**6*(87*y*z**4 + 2*y*z**2*(87*y**2 - 280) + y*(87*y**4 - 560*y**2 - 256) + 315*z**5 + z**3*(315*y**2 - 1440)) + 16*d**4*(3033*y*z**4 + 6*y*z**2*(1011*y**2 + 224) + y*(3033*y**4 + 1344*y**2 - 64) + 9585*z**5 + z**3*(9585*y**2 + 2880)) + 2304*d**2*(y**2 + z**2)*(y**3*(16*y**2 + 5) + 16*y*z**4 + y*z**2*(32*y**2 + 5) + 60*z**5 + z**3*(60*y**2 + 40)) + 6912*(y**2 + z**2)**3*(y**3 + y*z**2 + 5*z**3)) + 768*d**8*x**4*y*(y**2 + z**2)*(729*d**12*(y**3 + y*z**2 + 5*z**3) + 162*d**10*(y**3*(9*y**2 - 64) + 9*y*z**4 + 2*y*z**2*(9*y**2 - 32) + 45*z**5 + z**3*(45*y**2 - 240)) + 9*d**8*(81*y*z**6 + 9*y*z**4*(27*y**2 - 224) + 3*y*z**2*(81*y**4 - 1344*y**2 + 2240) + y*(81*y**6 - 2016*y**4 + 6720*y**2 + 2048) + 405*z**7 + z**5*(810*y**2 - 7200) + z**3*(405*y**4 - 7200*y**2 + 17280)) - 8*d**6*(1053*y**7 + 9*y**5*(351*z**2 - 2512) + 3645*y**4*z**3 + y**3*(3159*z**4 - 45216*z**2 - 7680) + 810*y**2*z**3*(9*z**2 - 80) + y*(1053*z**6 - 22608*z**4 - 7680*z**2 + 512) + 405*z**5*(9*z**2 - 160)) + 32*d**4*(y**3*(7101*y**4 + 1728*y**2 - 640) + 7101*y*z**6 + 27*y*z**4*(789*y**2 + 64) + y*z**2*(21303*y**4 + 3456*y**2 - 640) + 23355*z**7 + z**5*(46710*y**2 + 2880) + z**3*(23355*y**4 + 2880*y**2 + 960)) + 384*d**2*(y**2 + z**2)**2*(y**3*(315*y**2 + 76) + 315*y*z**4 + 2*y*z**2*(315*y**2 + 38) + 1215*z**5 + z**3*(1215*y**2 + 360)) + 20736*(y**2 + z**2)**4*(y**3 + y*z**2 + 5*z**3)) + 1536*d**8*x**2*y*(y**2 + z**2)*(243*d**14*(y**3 + y*z**2 + 5*z**3) + 27*d**12*(y**3*(27*y**2 - 128) + 27*y*z**4 + 2*y*z**2*(27*y**2 - 64) + 135*z**5 + z**3*(135*y**2 - 480)) + 3*d**10*(243*y*z**6 + 729*y*z**4*(y**2 - 4) + 3*y*z**2*(243*y**2*(y**2 - 8) + 2240) + y*(3*y**2*(9*y**2 - 80)*(9*y**2 - 28) + 1024) + 1215*z**7 + z**5*(2430*y**2 - 10260) + z**3*(1215*y**4 - 10260*y**2 + 17280)) + d**8*(243*y**9 - 7776*y**7 + 68256*y**5 - 3072*y**3 + 243*y*z**8 + 972*y*z**6*(y**2 - 8) + 54*y*z**4*(y**2*(y + 4)*(27*y - 108) + 1264) + 12*y*z**2*(9*y**2*(9*y**2*(y**2 - 24) + 1264) - 256) - 1024*y + 1215*z**9 + z**7*(3645*y**2 - 25920) + z**5*(3645*y**4 - 51840*y**2 + 177120) + z**3*(1215*y**6 - 25920*y**4 + 177120*y**2 - 46080)) - 12*d**6*(y**3*(207*y**6 - 9456*y**4 + 2624*y**2 + 1536) + 207*y*z**8 + 12*y*z**6*(69*y**2 - 788) + 2*y*z**4*(621*y**4 - 14184*y**2 + 1312) + 4*y*z**2*(207*y**6 - 7092*y**4 + 1312*y**2 + 384) + 675*z**9 + z**7*(2025*y**2 - 27360) + z**5*(2025*y**4 - 54720*y**2 + 13440) + z**3*(675*y**6 - 27360*y**4 + 13440*y**2 - 2560)) + 16*d**4*(y**2 + z**2)*(y**3*(6363*y**4 - 2016*y**2 - 1280) + 6363*y*z**6 + 63*y*z**4*(303*y**2 - 32) + y*z**2*(63*y**2*(303*y**2 - 64) - 1280) + 21195*z**7 + z**5*(42390*y**2 - 10080) + z**3*(21195*y**4 - 10080*y**2 - 3840)) + 768*d**2*(y**2 + z**2)**3*(y**3*(57*y**2 - 7) + 57*y*z**4 + y*z**2*(114*y**2 - 7) + 225*z**5 + z**3*(225*y**2 - 60)) + 6912*(y**2 + z**2)**5*(y**3 + y*z**2 + 5*z**3)) + 128*d**8*y*(y**2 + z**2)*(3*d**4 + d**2*(6*y**2 + 6*z**2 - 8) + 3*(y**2 + z**2)**2)**2*(81*d**8*(y**3 + y*z**2 + 5*z**3) - 720*d**6*(y**3 + y*z**2 + 3*z**3) + 576*d**4*(4*y**3 + 4*y*z**2 + 5*z**3) + 128*d**2*(y**2 + z**2)*(51*y**3 + y*(51*z**2 + 8) + 135*z**3) + 2304*(y**2 + z**2)**2*(y**3 + y*z**2 + 5*z**3)) + 4*d**6*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)*(81*d**12*(33*y**4 + 34*y**2*z**2 + 150*y*z**3 + z**4) + 324*d**10*(y**4*(33*x**2 + 33*y**2 - 94) + y**2*z**2*(34*x**2 + 67*y**2 - 96) + 150*y*z**5 + 150*y*z**3*(x**2 + y**2 - 2) + z**6 + z**4*(x**2 + 35*y**2 - 2)) + 18*d**8*(-640*x**2*y**2 + 891*y**8 + y**6*(1782*x**2 - 4752) + y**4*(891*x**4 - 6768*x**2 + 6848) + 4050*y*z**7 + 180*y*z**5*(45*x**2 + 45*y**2 - 68) + 90*y*z**3*(45*x**4 + 30*x**2*(3*y**2 - 8) + 45*y**4 - 136*y**2 + 160) + 27*z**8 + z**6*(54*x**2 + 972*y**2 - 96) + z**4*(2754*y**4 + 3*y**2*(630*x**2 - 1648) + 3*(8 - 3*x**2)**2) + z**2*(128*x**2 + 2700*y**6 + 2*y**4*(1809*x**2 - 4800) + 2*y**2*(459*x**4 - 3456*x**2 + 3520))) + 12*d**6*(320*x**2*y**2*(2 - 9*x**2) + 891*y**10 + y**8*(2673*x**2 - 8856) + y**6*(2673*x**4 - 24084*x**2 + 16128) + y**4*(891*x**6 - 15228*x**4 + 19584*x**2 - 18048) + 4050*y*z**9 + 2430*y*z**7*(5*x**2 + 5*y**2 - 8) + 90*y*z**5*(135*x**4 - 756*x**2 + 135*y**4 + y**2*(270*x**2 - 432) + 256) + 30*y*z**3*(135*x**6 + 405*x**4*(y**2 - 4) + 3*x**2*(135*y**4 - 756*y**2 + 640) + 135*y**6 - 648*y**4 + 768*y**2 - 640) + 27*z**10 + z**8*(81*x**2 + 999*y**2 - 144) + z**6*(81*x**4 - 468*x**2 + 3726*y**4 + 3*y**2*(972*x**2 - 3096) + 768) + z**4*(27*x**6 + 81*x**4*(35*y**2 - 4) + 6*x**2*(1377*y**4 - 4170*y**2 + 256) + 6*y**2*(909*y**4 - 4500*y**2 + 2944) - 896) + z**2*(64*x**2*(9*x**2 - 2) + 3591*y**8 + y**6*(8100*x**2 - 26712) + y**4*(5427*x**4 - 48636*x**2 + 33024) + y**2*(918*x**6 - 15552*x**4 + 21120*x**2 - 18944))) + d**4*(81*x**8*(33*y**4 + 34*y**2*z**2 + 150*y*z**3 + z**4) + 108*x**6*(y**2*(99*y**4 - 1128*y**2 - 320) + 450*y*z**5 + 450*y*z**3*(y**2 - 8) + 3*z**6 + z**4*(105*y**2 - 24) + z**2*(201*y**4 - 1152*y**2 + 64)) + 6*x**4*(y**2*(9*y**2*(297*y**4 - 5808*y**2 + 1280) + 2560) + 12150*y*z**7 + 4860*y*z**5*(5*y**2 - 32) + 270*y*z**3*(45*y**4 - 576*y**2 + 320) + 81*z**8 + z**6*(2916*y**2 - 1008) + z**4*(8262*y**4 - 54288*y**2 + 4608) + z**2*(36*y**2*(225*y**4 - 2932*y**2 + 448) - 512)) + 12*x**2*(y**4*(27*y**2*(33*y**4 - 808*y**2 + 1152) - 5120) + y**2*z**2*(9*y**2*(399*y**4 - 7312*y**2 + 7232) - 6656) + 4050*y*z**9 + 2430*y*z**7*(5*y**2 - 24) + 90*y*z**5*(27*y**2*(5*y**2 - 48) + 1216) + 30*y*z**3*(135*y**6 - 1944*y**4 + 3648*y**2 - 1280) + 27*z**10 + z**8*(999*y**2 - 360) + z**6*(3726*y**4 - 22896*y**2 + 2880) + z**4*(5454*y**6 - 66528*y**4 + 36864*y**2 - 1536)) + (y**2 + z**2)*(y**2*(27*y**4*(99*y**4 - 2592*y**2 + 5632) - 319488*y**2 + 28672) + 12150*y*z**9 + 2430*y*z**7*(15*y**2 - 64) + 270*y*z**5*(135*y**4 - 1152*y**2 + 896) + 90*y*z**3*(3*y**2*(45*y**4 - 576*y**2 + 896) - 7168) + 81*z**10 + z**8*(2997*y**2 - 864) + z**6*(11178*y**4 - 72576*y**2 + 11520) + z**4*(16362*y**6 - 212544*y**4 + 175104*y**2 - 18432) + z**2*(10773*y**8 - 210816*y**6 + 315648*y**4 - 337920*y**2 + 12288))) + 24*d**2*(-3*x**8*(423*y**4 + 16*y**2*(27*z**2 + 10) + 1350*y*z**3 + 9*z**4 - 32*z**2) - 2*x**6*(7560*y**3*z**3 + y**2*(2403*y**4 + 1536*y**2 - 160) + 7560*y*z**5 + 45*z**6 + z**4*(2493*y**2 - 288) + z**2*(4851*y**4 + 1248*y**2 + 32)) - 4*x**4*(3*y**4*(567*y**4 - 400*y**2 - 240) + 2*y**2*z**2*(171*y**2*(15*y**2 - 8) - 320) + 5265*y*z**7 + 1170*y*z**5*(9*y**2 - 8) + 15*y*z**3*(351*y**4 - 624*y**2 + 160) + 27*z**8 + z**6*(1782*y**2 - 336) + z**4*(5184*y**4 - 1872*y**2 + 80)) - 6*x**2*(y**2 + z**2)*(y**4*(711*y**4 - 1568*y**2 + 640) + 2*y**2*z**2*(1071*y**4 - 1664*y**2 + 384) + 2160*y*z**7 + 480*y*z**5*(9*y**2 - 14) + 80*y*z**3*(27*y**4 - 84*y**2 + 52) + 9*z**8 + z**6*(738*y**2 - 192) + z**4*(2160*y**4 - 1952*y**2 + 128)) - 3*(y**2 + z**2)**2*(y**4*(333*y**4 - 672*y**2 + 1664) + 2*y**2*z**2*(501*y**4 - 720*y**2 + 896) + 990*y*z**7 + 60*y*z**5*(33*y**2 - 16) + 10*y*z**3*(99*y**4 - 96*y**2 + 512) + 3*z**8 + z**6*(342*y**2 - 96) + z**4*(1008*y**4 - 864*y**2 + 128))) - 288*(x**2 + y**2 + z**2)**2*(x**4*(9*y**4*(y**2 + 12) + 2*y**2*z**2*(9*y**2 + 52) + 45*y*z**5 + 15*y*z**3*(3*y**2 + 20) + z**4*(9*y**2 - 4)) + 6*x**2*(y**2 + z**2)*(y**4*(3*y**2 - 31) + 2*y**2*z**2*(3*y**2 - 17) + 15*y*z**5 + 15*y*z**3*(y**2 - 10) + z**4*(3*y**2 - 3)) + 3*(y**2 + z**2)**3*(3*y**4 + y**2*(3*z**2 - 10) + 15*y*z**3 - 2*z**2))) + (-12*d**4 + d**2*(-24*x**2 + 66*y**2 + 6*z**2 + 32) - (x**2 + y**2 + z**2)*(12*x**2 - 33*y**2 - 3*z**2))*(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**3 + (9*d**9*(x**2 + y**2 + z**2) + 12*d**7*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**5*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**3*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*d*(x**2 + y**2 + z**2)**5)**2*(135*d**10*(3*y**2 + z**2) + 36*d**8*(5*y**2*(9*x**2 + 9*y**2 - 19) + 15*z**4 + z**2*(15*x**2 + 60*y**2 - 29)) + 18*d**6*(135*y**6 + y**4*(270*x**2 + 315*z**2 - 256) + 5*y**2*(27*x**4 + 8*x**2*(9*z**2 - 19) + 45*z**4 - 80*z**2 + 112) + 1200*y*z**3 + z**2*(45*x**4 - 232*x**2 + 45*z**4 + z**2*(90*x**2 - 144) + 144)) + 4*d**4*(y**2*(405*x**6 - 5130*x**4 + 3216*x**2 + 405*y**6 + y**4*(1215*x**2 - 648) + y**2*(1215*x**4 - 5778*x**2 + 864) - 1600) + 8100*y*z**5 + 900*y*z**3*(9*x**2 + 9*y**2 - 8) + 135*z**8 + z**6*(405*x**2 + 810*y**2 - 612) + z**4*(405*x**4 + 3*x**2*(675*y**2 - 726) + 1620*y**4 - 1872*y**2 + 768) + z**2*(135*x**6 + 54*x**4*(30*y**2 - 29) + 3*x**2*(945*y**4 - 2652*y**2 + 400) + 1350*y**6 - 1908*y**4 + 1632*y**2 - 704)) + 3*d**2*(45*x**8*(3*y**2 + z**2) + 12*x**6*(5*y**2*(9*y**2 - 76) + 15*z**4 + z**2*(60*y**2 - 116)) + 2*x**4*(y**2*(405*y**4 - 4608*y**2 + 464) + 3600*y*z**3 + 135*z**6 + z**4*(675*y**2 - 1584) + z**2*(945*y**4 - 6192*y**2 + 368)) + 4*x**2*(27*y**6*(5*y**2 - 44) + 1048*y**4 + 2*y**2*z**2*(225*y**4 - 1458*y**2 + 688) + 3600*y*z**5 + 1200*y*z**3*(3*y**2 + 1) + 45*z**8 + z**6*(270*y**2 - 540) + z**4*(540*y**4 - 2268*y**2 + 328)) + (y**2 + z**2)*(3*y**4*(45*y**4 - 32*y**2 + 128) + 2*y**2*z**2*(225*y**4 - 288*y**2 + 448) + 7200*y*z**5 + 1440*y*z**3*(5*y**2 - 6) + 45*z**8 + z**6*(270*y**2 - 384) + z**4*(108*y**2*(5*y**2 - 8) + 512))) - 36*(x**2 + y**2 + z**2)**3*(x**2*(95*y**2 + 29*z**2) + 2*y**4 + 10*y**2*z**2 - 150*y*z**3 + 8*z**4)))/(9*d**8*(x**2 + y**2 + z**2) + 12*d**6*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 2*d**4*(32*y**2 + 32*z**2 + (3*x**2 + 3*y**2 + 3*z**2)*(-16*y**2 - 16*z**2 + 9*(x**2 + y**2 + z**2)**2)) + 12*d**2*(x**2 + y**2 + z**2)**2*(-4*y**2 - 4*z**2 + 3*(x**2 + y**2 + z**2)**2) + 9*(x**2 + y**2 + z**2)**5)**(7/2)),
        "g": 0
    }
    unif_ref = 3
    if order == 2:
        max_nref = 5
    else:
        max_nref = 4
    bbox_sz = 2.0
elif mode == 'ols':
    exact = {
        "name": mode,
        "phi": sqrt(x*x + y*y + z*z) - 1,
        "u1": -(x**2*z + x*y**2 + y**2*z**2 + z**4)/(x**2 + y**2 + z**2),
        "u2": y*(x**2 + x*z*(z - 1) + z**2)/(x**2 + y**2 + z**2),
        "u3": (x**3 + x*(y**2 + z**3) - y**2*z)/(x**2 + y**2 + z**2),
        "p": x*y*y*y + z,
        "f1": alpha*x**2 - alpha*z**2 - x*(5*x*z + 11*x*(x**2 + y**2) + 5*y**2)/(x**2 + y**2 + z**2)**2 + y**3 - 4 + (-2*x*(alpha*x**3 + alpha*y**2 + x*(alpha*(y**2 + z) + 4*y**3 - 15) + z) + 10*y**2 + 5*z)/(2*x**2 + 2*y**2 + 2*z**2),
        "f2": y*(alpha*x + alpha + 3*x*y - (alpha*x**3 + alpha*y**2 + x*(alpha*(y**2 + z) + 4*y**3 - 10) + z - 5)/(x**2 + y**2 + z**2) - (5*x*z + 11*x*(x**2 + y**2) + 5*y**2)/(x**2 + y**2 + z**2)**2),
        "f3": alpha*x*z + (-2*alpha*x**3*(z - 1) + 2*x**2 + x*(2*y**2*(alpha - z*(alpha + 4*y)) + 8*z - 5) - 2*y**2*(alpha*z - 1))/(2*x**2 + 2*y**2 + 2*z**2) + (x**3*(5 - 11*z) + x*y**2*(5 - 11*z) - 5*y**2*z)/(x**2 + y**2 + z**2)**2,
        "g": (x**2 + x*z*(4*z - 3) - 2*y**2 + z**2)/(x**2 + y**2 + z**2)
    }
    unif_ref = 1
    if order == 2:
        max_nref = 6
    else:
        max_nref = 5
    bbox_sz = 1.0
else:
    print("Error.")
    exit(1)

df = pd.DataFrame(columns=['h', 'ndof', 'l2u', 'h1u', 'l2p', 'h1p'])

mesh = None

l2us = []
h1us = []
l2ps = []
h1ps = []

for nref in range(max_nref+1):
    h = 2*bbox_sz*2**(-unif_ref-nref)

    if mesh:
        refine_at_levelset(mesh=mesh, levelset=exact['phi'], nref=1)
    else:
        mesh = background_mesh(unif_ref=unif_ref, bbox_sz=bbox_sz)

    ndof, l2u, h1u, l2p, h1p = steady_stokes(mesh=mesh, order=order, out=False, **exact)

    print(f"h = {h}, ndof = {ndof}")

    df.loc[nref] = [h, ndof, l2u, h1u, l2p, h1p]
    df.to_csv(f"{mode}_p{order}.csv")

    if len(l2us) > 0:
        print(f"{ndof:.2E} & {np.log2(l2us[-1]/l2u):.2f} & {l2u:.2E} & {np.log2(h1us[-1]/h1u):.2f} & {h1u:.2E} & {np.log2(l2ps[-1]/l2p):.2f} & {l2p:.2E} & {np.log2(h1ps[-1]/h1p):.2f} & {h1p:.2E}")
    else:
        print(f"{ndof:.2E} &      & {l2u:.2E} &      & {h1u:.2E} &      & {l2p:.2E} &      & {h1p:.2E}")

    l2us.append(l2u)
    h1us.append(h1u)
    l2ps.append(l2p)
    h1ps.append(h1p)
